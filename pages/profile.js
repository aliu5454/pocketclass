import Head from "next/head";
import Image from "next/image";
import Footer from "../components/Footer";
import Header from "../components/Header";

import { Router, useRouter } from "next/router";
import { useAuthState, useSignOut } from "react-firebase-hooks/auth";
import { auth, db } from "../firebaseConfig";
import { useState } from "react";
import { doc, getDoc } from "firebase/firestore";

export default function Profile() {

    const [user, loading, error] = useAuthState(auth);
    const [signOut, signOutLoading, signOutError] = useSignOut(auth);
    const [category, setCategory] = useState('')
    const router = useRouter()

    if (loading || signOutLoading || !user) {
        return <section className="flex justify-center items-center min-h-[100vh]">
            <Image src="/Rolling-1s-200px.svg" width={'60px'} height={"60px"} />
        </section>
    }

    if (category === " ") {
        return <section className="flex justify-center items-center min-h-[100vh]">
            <Image src="/Rolling-1s-200px.svg" width={'60px'} height={"60px"} />
        </section>
    }

    const checkCategory = async (user) => {

        const docSnap = await getDoc(doc(db, "Users", user.uid));

        if (docSnap.exists()) {

            setCategory(docSnap.data().category);
        }
    }

    if (user) {
        checkCategory(user)
    }


    return (
        <div className="mx-auto">
            <Head>
                <title>Profile</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/pc_favicon.ico" />
            </Head>
            {/* header */}
            <Header />
            {/* banner */}

            <div className="max-w-7xl mx-auto px-8 py-8 sm:px-16">
                <h1 className="text-center text-3xl pb-[50px] font-bold">Profile</h1>
                <div className="container flex items-center flex-col min-h-[70vh]" >

                    <div className="info">
                        {
                            user.photoURL && <img src={user.photoURL} referrerpolicy="no-referrer" className="rounded-full block w-[80px] mx-auto" />
                        }
                        {
                            user?.displayName && <p className="font-bold text-xl mt-3">Name: {user?.displayName}</p>
                        }
                        <p className="font-bold text-xl my-3">Email: {user?.email}</p>
                        {
                            category && <p className="font-bold text-xl">Role: {category.charAt(0).toUpperCase() + category.slice(1)}</p>
                        }

                        <button
                            type="submit"
                            onClick={() => {
                                signOut()
                                router.push('/')
                            }}
                            className='active:scale-105 my-5 active:duration-75 w-[100px] transition-all hover:scale-[1.01]  ease-in-out transform py-1 bg-logo-red rounded-xl text-white font-bold text-lg'>
                            Logout
                        </button>
                    </div>
                </div>
            </div>

            <Footer />
        </div>
    );
}
